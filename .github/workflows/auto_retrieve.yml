name: Automated retrieval
run-name: Automated retrieval
on:
  workflow_dispatch:
  schedule:
    - cron: '0 16 * * *'
permissions:
  contents: write

jobs:
  # This condition lets the job run even if any of the previous jobs failed
  # ${{ ! cancelled() }}

  # This condition prevents the job from running if the test job failed
  # ${{ needs.test-functions.result == 'success' }}

  test-functions:
    uses: ./.github/workflows/test_functions.yml

  tidy-and-update:
    if: ${{ ! cancelled() }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Update subdomains file
        run: |
          {
            # Get subdomains less than or equal to 3 characters and occur more
            # than 15 times
            mawk -F '.' '{ print $1 }' data/raw.txt | sort | uniq -c | sort -nr \
                | mawk '$1 > 15 && length($2) <= 3 { print $2 }'

            # Get manually added subdomains
            mawk 'length($0) > 3 { print }' config/subdomains.txt
          } | sort -u -o config/subdomains.txt

      - name: Prune wildcards file
        run: |
          while read -r wildcard; do
            if (( $(grep -c "$wildcard" data/raw.txt) >= 10 )); then
              printf "%s\n" "$wildcard"
            fi
          done < config/wildcards.txt > temp
          mv temp config/wildcards.txt

      - name: Prune logs
        run: |
          # 500,000 is enough for a month's worth of logs.
          bash scripts/tools.sh --prune-lines config/domain_log.csv 500000
          bash scripts/tools.sh --prune-lines config/source_log.csv 10000

      - name: Push
        run: |
          git config user.email ${{ vars.GIT_EMAIL }}
          git config user.name ${{ vars.GIT_USERNAME }}
          git add .
          git diff-index --quiet HEAD || git commit -m "CI: tidy and update files"
          git push -q

  build-nsfw:
    needs: [test-functions, tidy-and-update]
    if: ${{ ! cancelled() }}
    uses: ./.github/workflows/build_nsfw.yml

  retrieve-domains:
    needs: [test-functions, build-nsfw]
    if: ${{ ! cancelled() && needs.test-functions.result == 'success' }}
    uses: ./.github/workflows/retrieve_domains.yml
    secrets: inherit

  check-dead:
    needs: [test-functions, retrieve-domains]
    if: ${{ ! cancelled() && needs.test-functions.result == 'success' }}
    uses: ./.github/workflows/check_dead.yml

  check-unparked:
    needs: [test-functions, check-dead]
    if: ${{ ! cancelled() && needs.test-functions.result == 'success' }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main

      - name: check_parked.sh
        run: bash scripts/check_parked.sh checkunparked

      - name: Push
        run: |
          git config user.email ${{ vars.GIT_EMAIL }}
          git config user.name ${{ vars.GIT_USERNAME }}
          git add .
          git diff-index --quiet HEAD || git commit -m "CI: check for unparked domains"
          git push -q

  # Run validation after dead/unparked checks to process subdomains
  validate:
    needs: [test-functions, check-unparked]
    if: ${{ ! cancelled() && needs.test-functions.result == 'success' }}
    uses: ./.github/workflows/validate_domains.yml
    secrets: inherit

  build:
    needs: [test-functions, validate]
    if: ${{ ! cancelled() && needs.test-functions.result == 'success' }}
    uses: ./.github/workflows/build_lists.yml

  update-readme:
    needs: build
    # Run only if build was successful
    if: ${{ ! cancelled() && needs.build.result == 'success' }}
    uses: ./.github/workflows/update_readme.yml
